name: Vulnerability Scan
on:
   workflow_call:

jobs:
  vulnerability-scan:
    name: combined
    runs-on: [self-hosted, linux]
    steps:
      - name: Cleanup workspace (Linux)
        if: always() && runner.os == 'Linux'
        run: sudo rm -rf ..?* .[!.]* *

      - name: Checkout infrastructure
        uses: actions/checkout@v3
        with:
          repository: ${{ vars.INFRA_REPO }}
          token: ${{ secrets.INFRA_REPO_TOKEN }}
          path: infrastructure
          ref: main

      - name: Download linux-release-build
        uses: actions/download-artifact@v3
        with:
          name: linux-release-build
          path: bdba

      - name: Download windows-release-build
        uses: actions/download-artifact@v3
        with:
          name: windows-release-build
          path: bdba

      - name: Create archive to scan
        run: |
          cp infrastructure/config/.bdba.yaml bdba/
          pushd bdba
          zip --symlinks -r ../vpl-release.zip .
          popd

      - name: Build Docker image for scanning
        run: |
          cat >Dockerfile << EOL
          FROM ubuntu:22.04

          RUN apt-get update && apt-get install -y --no-install-recommends \
          python3-venv \
          && \
          rm -rf /var/lib/apt/lists/*
          EOL

          docker build . -t vpl_pythonenv:ubuntu

      - name: Scan package in container
        run: |
          cat >scan.sh <<EOL
          #!/bin/bash
          set -o errexit ; set -o nounset
          python3 -m venv _venv
          . _venv/bin/activate
          pip3 install -r infrastructure/requirements-dev.txt
          python3 infrastructure/script/utils/bdba.py -u ${{ vars.AD_USR }} -p ${{ secrets.AD_PW }} -g 32 -r results.pdf -c components.csv -v vulns.csv -V ${{ github.ref_name }} *.zip >results.json

          EOL
          chmod a+x scan.sh
          docker run --rm -v $(pwd):/tmp/work -w /tmp/work vpl_pythonenv:ubuntu ./scan.sh

      - name: Upload scan results
        uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: vpl-vulnerability-scan
          path: |
            *.csv
            *.json
            *.pdf
      - name: Cleanup workspace (Linux)
        if: always() && runner.os == 'Linux'
        run: sudo rm -rf ..?* .[!.]* *
